PROG=test_ftnunit

SRCS =	fft_type.f90 ftnunit.f90 global_parameters.f90 inv_mesh.f90 \
	mc_integration.f90 random_tetrahedron.f90 test_fft_type.f90 \
	test_ftnunit.f90 test_inv_mesh.f90 test_mc.f90 test_tetrahedra.f90 \
	type_parameter.f90

OBJS =	fft_type.o ftnunit.o global_parameters.o inv_mesh.o mc_integration.o \
	random_tetrahedron.o test_fft_type.o test_ftnunit.o test_inv_mesh.o \
	test_mc.o test_tetrahedra.o type_parameter.o

#Example to include specific netcdf libraries: 
LIBS = -lm -lfftw3 -lfftw3f

# set unc to compile with netcdf: 
#F90FLAGS = -Dunc 
CC = gcc
CFLAGS = -O3 -DF_UNDERSCORE
F90 = mpif90 -O3  -fbacktrace 
FC = gfortran -O3 -fbacktrace 
INCLUDE = -I /usr/include 
# to include local built of netcdf you might want to use sth like this: 
#INCLUDE = -I $(HOME)/local/include -I /usr/include 


# cancel m2c implicit rule 
%.o : %.mod 
 

all: $(PROG)

$(PROG): $(OBJS)
	$(F90) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)

clean:
	rm -f $(PROG) $(OBJS) *.M *.mod *.d *.il core 

.SUFFIXES: $(SUFFIXES) .f90 .F90

.f90.o:
	$(F90) $(F90FLAGS) -c $(INCLUDE) $<

.F90.o:
	$(F90) $(F90FLAGS) -c $(INCLUDE) $<

fft_type.o: global_parameters.o  Makefile 
ftnunit.o:  Makefile 
global_parameters.o:  Makefile 
inv_mesh.o: global_parameters.o type_parameter.o Makefile 
mc_integration.o: global_parameters.o Makefile 
random_tetrahedron.o: global_parameters.o Makefile 
test_fft_type.o: fft_type.o ftnunit.o global_parameters.o Makefile 
test_ftnunit.o: ftnunit.o test_fft_type.o test_inv_mesh.o test_mc.o \
	test_tetrahedra.o Makefile 
test_inv_mesh.o: ftnunit.o global_parameters.o inv_mesh.o Makefile 
test_mc.o: ftnunit.o global_parameters.o mc_integration.o \
	random_tetrahedron.o Makefile 
test_tetrahedra.o: ftnunit.o global_parameters.o random_tetrahedron.o Makefile 
type_parameter.o: global_parameters.o Makefile 
